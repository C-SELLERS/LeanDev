{
	"name": "Lean Dev",

	"workspaceMount": "source=${localWorkspaceFolder},target=/Workspaces/Local,type=bind",
	"workspaceFolder": "/Workspaces/Local",

	// Use devcontainer Dockerfile that is based on Lean foundation image
	"build": {
		"dockerfile": "Dockerfile"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-dotnettools.csharp",
		"formulahendry.dotnet-test-explorer",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"eamodio.gitlens",
		"yzhang.markdown-all-in-one",
		"ms-azuretools.vscode-docker",
		"mads-hartmann.bash-ide-vscode",
		"rogalmic.bash-debug"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Post create commands; only runs on initial creation of container
	"postCreateCommand": "chmod -R +x /Workspaces/Local/scripts/* && /Workspaces/Local/scripts/lean_setup.sh",

	// Post start commands; runs each time the container is started
	"postStartCommand": "",

	// Add mounts to docker container
	"mounts": [ 
		/* Example data mount from local machine, must set "data-folder" in Lean/Launcher/Config.json 
		 to target directory for Lean use. Not required, but maintains data locally, good for downloading use case.
		 Can also add this target location to the workspace file to see data folder in VS Code, reference
		 lean.code-workspace file included in this repo for an example for this target data location */
		"source=${localWorkspaceFolder}/Data,target=/Workspaces/Data,type=bind", 

		// Docker in Docker Mount; allows docker commands to be executed through host machine
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",

		// Mount a local location to store our Notebooks, but allows them to run "../" from bin
		"source=${localWorkspaceFolder}/Notebooks,target=/Workspaces/Local/Lean/Launcher/bin/Debug/Notebooks,type=bind", 
	],
}